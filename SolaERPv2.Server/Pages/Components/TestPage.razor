<TelerikForm Model="@vendor">
    <FormValidation>
        <FluentValidationValidator @ref="vendorValidator" DisableAssemblyScanning="true" />
    </FormValidation>
    <FormItems>
        <FormItem Field="@nameof(Vendor.TaxId)" />
        <FormItem Field="@nameof(Vendor.VendorName)" />
        <FormItem Field="@nameof(Vendor.CountryCode)" />
        <FormItem Field="@nameof(Vendor.CompanyWebsite)" />
        <TelerikValidationSummary />
    </FormItems>
    <FormButtons>
        <TelerikButton OnClick="@(() => ValidateVendor())">Submit</TelerikButton>
    </FormButtons>
</TelerikForm>


@code {
    Vendor? vendor = new();
    FluentValidationValidator? vendorValidator;

    bool ValidateVendor()
    {
        return vendorValidator.Validate(options => options.IncludeAllRuleSets());
    }

    void FillFormProgrammaticallyAndValidate(Vendor newVendor)
    {
        vendor = newVendor;
        ValidateVendor();

        // it works if I assign properties one by one
        // vendor.VendorName = newVendor.VendorName;
        // vendor.CountryCode = newVendor.CountryCode
    }

    public class VendorModelValidator : AbstractValidator<Vendor>
    {
        public VendorModelValidator()
        {
            RuleSet("ValidateName", () =>
            {
                RuleFor(p => p.VendorName)
                    .NotEmpty().WithMessage("'Name' is mandatory");
            });
        }
    }
}