@page "/"
@implements IDisposable
@using Model = BaseModel

<PageTitle>Index</PageTitle>

@if (showSupplierRegistration)
{
    <RegisterSupplier @ref="@registerSupplier" @bind-CurrentPerson="@currentPerson" @bind-CurrentVendor="@currentVendor" CurrentPageNumber="@currentPageNumber" />
}
else
{
    <h3>Dashboard Placeholder</h3>
}

@code {
    [CascadingParameter] public AppState AppState { get; set; }

    AppUser? currentPerson = new();
    Vendor? currentVendor = new();

    RegisterSupplier? registerSupplier;
    bool showSupplierRegistration = false;
    int currentPageNumber = 1; // total 3 pages

    protected override void OnInitialized()
    {
        OnAppStateInitialized();
        ShowSupplierRegistrationPage();
        currentPerson = SessionData.CurrentUser;
    }

    void ShowSupplierRegistrationPage()
    {
        if (SessionData.CurrentUser != null && SessionData.CurrentUser.StatusId == 0)
        {
            AppState.BackButtonVisible = true;
            AppState.NextButtonVisible = true;
            showSupplierRegistration = true;
        }
        else
        {
            AppState.BackButtonVisible = false;
            AppState.NextButtonVisible = false;
            showSupplierRegistration = false;
        }
    }

    void OnAppStateInitialized()
    {
        AppState.SetDefaults();
        SetBackNextButtonsAbility();
        AppState.OnBackClick += BackClickHandler;
        AppState.OnNextClick += NextClickHandler;
        AppState.OnAddClick += AddClickHandler;
        AppState.OnSaveClick += SaveClickHandler;
    }

    void IDisposable.Dispose()
    {
        AppState.OnBackClick -= BackClickHandler;
        AppState.OnNextClick -= NextClickHandler;
        AppState.OnAddClick -= AddClickHandler;
        AppState.OnSaveClick -= SaveClickHandler;
    }

    void BackClickHandler()
    {
        currentPageNumber -= 1;
        SetBackNextButtonsAbility();
    }

    async void NextClickHandler()
    {
        var isVendorValid = await registerSupplier.NextClickValid();
        if (isVendorValid)
        {
            currentPageNumber += 1;
        }
        SetBackNextButtonsAbility();
    }

    void SetBackNextButtonsAbility()
    {
        if (currentPageNumber == 1)
        {
            AppState.BackButtonEnabled = false;
            AppState.NextButtonEnabled = true;
            AppState.AddButtonVisible = false;
            AppState.SaveButtonVisible = false;
        }
        else if (currentPageNumber == 2)
        {
            AppState.BackButtonEnabled = true;
            AppState.NextButtonEnabled = true;
            AppState.AddButtonVisible = true;
            AppState.SaveButtonVisible = false;
        }
        else if (currentPageNumber == 3)
        {
            AppState.BackButtonEnabled = true;
            AppState.NextButtonEnabled = false;
            AppState.AddButtonVisible = false;
            AppState.SaveButtonVisible = true;
        }
        else
        {
            AppState.BackButtonEnabled = false;
            AppState.NextButtonEnabled = false;
            AppState.AddButtonVisible = false;
            AppState.SaveButtonVisible = false;
        }
        AppState.Refresh();
    }

    async void SaveClickHandler()
    {
    //
    }

    void AddClickHandler()
    {
        registerSupplier.AddClickHandler();
    }

    //async Task SendEmail(MouseEventArgs args)
    //{
    //    if (emailAddress?.Length > 0)
    //    {
    //        AppState.Loading = true;
    //        var addresses = emailAddress.Replace(";", ",").Split(",");
    //        var mailSent = await MailService.SendApprovalMail(addresses, emailSubject, SessionData.CurrentUser.FullName, SessionData.CurrentUser.UserName, destination, documentNumber);
    //        AppState.Loading = false;
    //        if (mailSent)
    //        {
    //            AppState.ShowAlert($"Email successfully sent to {emailAddress}", Severity.Success);
    //        }
    //        else
    //        {
    //            AppState.ShowAlert("Could not send an email", Severity.Error);
    //        }
    //    }
    //    else
    //    {
    //        AppState.ShowAlert("email is mandatory", Severity.Error);
    //    }
    //}
}